"""
This Python script reads the CSV file generated by strdump.dll and decodes the strings in the hex memory data

Usage: python read_strings.py memdump_<timestamp>.csv

Example:
python ./decode_strings.py memdump_25-09-24_14-58-37.csv

"""

import csv
import sys

def byte_is_printable(b: int) -> bool:
    return 32 <= b < 127 

def process_hex_string(hex_str):
    byte_values = [int(b, 16) for b in hex_str.strip().split()]

    s = []
    for i, val in enumerate(byte_values):
        #print(f"Index {i:02}: 0x{val:02X} ({val})")
        if byte_is_printable(val):
            s.append(val)

    if not s:
        ret = '<no string>'
    else:
        ret = ''.join(chr(v) for v in s)

    return ret


def main():
    if len(sys.argv) < 2:
        print(f"Usage: {sys.argv[0]} <csvfile>")
        sys.exit(1)

    filename = sys.argv[1]

    pc = []
    hex_vals = []

    with open(filename, newline="", encoding="utf-8") as f:
        reader = csv.DictReader(f)
        for row in reader:
            pc_val = int(row["pc"], 16)     # Hexstring -> int
            ascii_val = row["hex"]
            pc.append(pc_val)
            hex_vals.append(ascii_val)

    for p, h in zip(pc, hex_vals):
        s = process_hex_string(h)
        print(f"pc=0x{p:08X}, hex='{h[:-1]}' ascii={s}")


if __name__ == "__main__":
    main()
